<?php

namespace App\Http\Controllers;

use App\Http\Requests;
use App\Http\Controllers\Controller;
use App\LocationItem;
use App\LocationCategory;
use App\Website;
use App\User;
use Illuminate\Http\Request;
use App\Http\Requests\LocationItemRequest;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Input;


class LocationItemController extends Controller {

    protected function thisName() {
        return "LocationItemController";
    }

    protected function thisDisplayName() {
        return "Location Item";
    }

    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index() {
        $records = LocationItem::oldest()->get();
        //return $records;
        return view('Admin.location_item.index', compact('records'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create() {
        //name_en act as text ,id act as value
        $location_category = LocationCategory::latest()->where('published', '1')->lists('name_en', 'id');
        $website = Website::latest()->where('published', '1')->lists('title_en', 'id');

        return view('Admin.location_item.create', compact('location_category', 'website'));
    }

    /**
     * Store a newly created resource in storage.

     * @return Response
     */
    public function store(LocationItemRequest $request) {
        $request = setCheckbox($request, 'published');
        $input = $request->all();
        $location_item = new LocationItem($input);
        Auth::user()->locationItems()->save($location_item);
        flash('Location Item added successfully!');
        return redirect(action('LocationItemController@index'));
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function show($id) {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function edit($id) {
        $record = LocationItem::findOrFail($id);
        $location_category = LocationCategory::latest()->where('published', '1')->lists('name_en', 'id');
        $website = Website::latest()->where('published', '1')->lists('title_en', 'id');
        return view('Admin.location_item.edit', compact('record', 'location_category', 'website'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function update(LocationItemRequest $request, $id) {
        $location_item = LocationItem::findOrFail($id);
        $location_item = updateCheckbox($request, $location_item, 'published');
        $input = $request->all();
        $location_item->update($input);
        Auth::user()->locationItems()->save($location_item);
        return redirect(action($this->thisName() . '@index'));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return Response
     */
    public function destroy($id) {
        $record = LocationItem::find($id);
        $record->delete();
        flash()->success('Location Item deleted successfully!');
        return redirect(action('LocationItemController@index'));
    }

    /*
      Export to Excel sheet

     */

    public function export() {

        // $records="ah";
        // $breaks = array("<br />","<br>","<br/>");
        $records = LocationItem::oldest()->get();
        foreach ($records as $record) {
            $website_name = Website::findOrFail($record['website_id']);  //Find Website record in table Website
            $record['website_id'] = $website_name->title_en; //  get website name  from record

            $LocationCategory_name = LocationCategory::findOrFail($record['location_category_id']);  //Find LocationCategory record in table LocationCategory
            $record['location_category_id'] = $LocationCategory_name->name_en; //  get LocationCategory name from record

            $user_name = User::findOrFail($record['user_id']);  //Find User record in table User
            $record['user_id'] = $user_name->name;  //  get username from record
        }
        $data = array();
        $date = date('Y-m-d');
        $filename = $this->thisDisplayName() . '_' . $date;
        $sheetname = $date;
        exportToExcel($records, $filename, $sheetname);
    }
    
    public function import(LocationItemRequest $request) {
        
        $request = setCheckbox($request, 'published');
        $input = $request->all();
        $location2 = new LocationItem();
        $destination2 = public_path() . '/excel_imported_files'; // upload path
        if (!is_null(Input::file('file'))) {
            $file2 = Input::file('file')->getClientOriginalName();
            $input['file'] = $file2;
            $file1 = Input::file('file');
            $uploadSuccess = $file1->move($destination2, $file2);

            if ($uploadSuccess) {
                importExcelFile($destination2, $file2, $location2, $this->thisName());
            } else {
                flash()->error('uploaded file failed', 'important');
                return redirect(action($this->thisName() . '@index'));
            }
        }
        flash()->success('Records updated successfully!');
       return redirect(action('LocationItemController@index'));
    }

}
